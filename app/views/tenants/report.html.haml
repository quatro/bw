


- content_for :js_before do
  = javascript_include_tag 'https://cdn.jsdelivr.net/npm/chart.js@2.8.0'


=render 'application/pageheader', title:'Reporting'

%section.content
  .row
    .col-md-6
      .panel.panel-default
        .panel-heading
          %h4 Monthly Sales
        .panel-body
          .row
            .col-sm-12
              %canvas#areaChart{style:'display: none;'}

          .row
            .col-sm-12
              %canvas#lineChart{style:'display: none;'}

          .row
            .col-sm-12
              %canvas#barChart{style:'display: none;'}

          .row
            .col-sm-12
              %canvas#stackedBarChart{style:'height: 400px;'}

    .col-md-6
      .panel.panel-default
        .panel-heading
          %h4 Monthly Usage Fees
        .panel-body
          .row
            .col-sm-12
              %canvas#licenseFeesChart{style:'height: 400px;'}








:javascript

  function initializeCharts(areaChartData) {

    //--------------
    //- AREA CHART -
    //--------------

    // Get context with jQuery - using jQuery's .get() method.
    var areaChartCanvas = $('#areaChart')[0].getContext('2d')

    var areaChartOptions = {
      maintainAspectRatio : false,
      responsive : true,
      legend: {
        display: false
      },
      scales: {
        xAxes: [{
          gridLines : {
            display : false,
          }
        }],
        yAxes: [{
          gridLines : {
            display : false,
          }
        }]
      }
    }

    // This will get the first returned node in the jQuery collection.
    var areaChart       = new Chart(areaChartCanvas, {
      type: 'line',
      data: areaChartData,
      options: areaChartOptions
    })

    //-------------
    //- LINE CHART -
    //--------------
    var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
    var lineChartOptions = jQuery.extend(true, {}, areaChartOptions)
    var lineChartData = jQuery.extend(true, {}, areaChartData)
    lineChartData.datasets[0].fill = false;
    // lineChartData.datasets[1].fill = false;
    lineChartOptions.datasetFill = false

    var lineChart = new Chart(lineChartCanvas, {
      type: 'line',
      data: lineChartData,
      options: lineChartOptions
    })

    // //-------------
    // //- DONUT CHART -
    // //-------------
    // // Get context with jQuery - using jQuery's .get() method.
    // var donutChartCanvas = $('#donutChart').get(0).getContext('2d')
    // var donutData        = {
    //   labels: [
    //       'Chrome',
    //       'IE',
    //       'FireFox',
    //       'Safari',
    //       'Opera',
    //       'Navigator',
    //   ],
    //   datasets: [
    //     {
    //       data: [700,500,400,600,300,100],
    //       backgroundColor : ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de'],
    //     }
    //   ]
    // }
    // var donutOptions     = {
    //   maintainAspectRatio : false,
    //   responsive : true,
    // }
    // //Create pie or douhnut chart
    // // You can switch between pie and douhnut using the method below.
    // var donutChart = new Chart(donutChartCanvas, {
    //   type: 'doughnut',
    //   data: donutData,
    //   options: donutOptions
    // })
    //
    // //-------------
    // //- PIE CHART -
    // //-------------
    // // Get context with jQuery - using jQuery's .get() method.
    // var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
    // var pieData        = donutData;
    // var pieOptions     = {
    //   maintainAspectRatio : false,
    //   responsive : true,
    // }
    // //Create pie or douhnut chart
    // // You can switch between pie and douhnut using the method below.
    // var pieChart = new Chart(pieChartCanvas, {
    //   type: 'pie',
    //   data: pieData,
    //   options: pieOptions
    // })

    //-------------
    //- BAR CHART -
    //-------------
    var barChartCanvas = $('#barChart').get(0).getContext('2d')
    var barChartData = jQuery.extend(true, {}, areaChartData)
    var temp0 = areaChartData.datasets[0]
    // var temp1 = areaChartData.datasets[1]
    // barChartData.datasets[0] = temp1
    barChartData.datasets[0] = temp0

    var barChartOptions = {
      responsive              : true,
      maintainAspectRatio     : false,
      datasetFill             : false
    }

    var barChart = new Chart(barChartCanvas, {
      type: 'bar',
      data: barChartData,
      options: barChartOptions
    })

    //---------------------
    //- STACKED BAR CHART -
    //---------------------
    var stackedBarChartCanvas = $('#stackedBarChart').get(0).getContext('2d')
    var stackedBarChartData = jQuery.extend(true, {}, barChartData)

    var stackedBarChartOptions = {
      responsive              : true,
      maintainAspectRatio     : false,
      scales: {
        xAxes: [{
          stacked: true,
        }],
        yAxes: [{
          stacked: true,
          ticks: {
            callback: function(label, index, labels) {
              return '$'+label/1000+'k';
            }
          },
          scaleLabel: {
            display: true,
            labelString: '1k = $1,000'
          }
        }]
      }
    }

    var stackedBarChart = new Chart(stackedBarChartCanvas, {
      type: 'bar',
      data: stackedBarChartData,
      options: stackedBarChartOptions
    })
  }

  var ready = function() {

    $.ajax({
      url: "#{monthly_sales_data_tenant_path(current_user.active_tenant)}",
      success: function(data) {
        initializeCharts(data);
      }
    });

    $.ajax({
      url: "#{monthly_license_cost_data_tenant_path(current_user.active_tenant)}",
      success: function(data) {

        // Get context with jQuery - using jQuery's .get() method.
        var chartCanvas = $('#licenseFeesChart')[0].getContext('2d')

        var chartOptions = {
          responsive              : true,
          maintainAspectRatio     : false,
          scales: {
            xAxes: [{
              stacked: true,
            }],
            yAxes: [{
              stacked: true,
              ticks: {
                callback: function(label, index, labels) {
                  return '$'+label/1000+'k';
                }
              },
              scaleLabel: {
                display: true,
                labelString: '1k = $1,000'
              }
            }]
          }
        }

        // This will get the first returned node in the jQuery collection.
        var chart       = new Chart(chartCanvas, {
          type: 'bar',
          data: data,
          options: chartOptions
        })
      }
    });

  }

  $(document).ready(ready);